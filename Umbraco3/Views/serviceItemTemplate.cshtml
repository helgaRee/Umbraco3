@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.ServiceItemTemplate>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{

	Layout = "mainLayout.cshtml";
	ViewBag.Title = Model.Value("pageTitle") ?? null;

	//Mappar fälten för ERROR
	//kontrollerar om det finns ett bool värde
	//kan vi konvertera värdet till bool? skriv isåfall ut variabler
	bool.TryParse(ViewData["error_name"]?.ToString()!, out bool error_name);
	bool.TryParse(ViewData["error_email"]?.ToString()!, out bool error_email);
	bool.TryParse(ViewData["error_message"]?.ToString()!, out bool error_message);

	// Kontrollera om formuläret har skickats
	bool formSubmitted = TempData["form_submitted"] != null && (bool)TempData["form_submitted"]!;


}

<section class="service-details">
	<div class="container">

		<div class="flex">
			<div class="page-content">
				@Model?.Value("pageContent")
			</div>
			@await Html.PartialAsync("Blockgrid/components/sidebarBox", Model)
		</div>

			@if(TempData["success"] != null)
			{
				<div class="success-message">@TempData["success"]</div>
			}
			else
			{
				@using (Html.BeginUmbracoForm("HandleQuestionFormSubmit", "ContactSurface", FormMethod.Post, new { novalidate = "novalidate"})) 
				{
					@Html.GetBlockListHtml(Model?.QuestionForm);
				}
			}
	</div>



</section>

@await Html.GetBlockGridHtmlAsync(Model!.Layout)

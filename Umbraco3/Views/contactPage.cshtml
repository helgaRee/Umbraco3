@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContactPage>;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;

@{
	Layout = "mainLayout.cshtml";
	ViewBag.Title = Model.Value("pageTitle") ?? "";

	var formTitle = Model.Value<string>("formTitle") ?? "";
	var formHeadline = Model.Value<string>("formHeadline") ?? "";
	var preamble = Model.Value<string>("formPreamble") ?? "";



	var isRequired = Model.Value<bool>("isRequired");

	var errorMessage = Model.Value<string>("errorMessage");







	bool.TryParse(ViewData["error_name"]?.ToString()!, out bool error_name);

	bool.TryParse(ViewData["error_phone"]?.ToString()!, out bool error_phone);

	bool.TryParse(ViewData["error_email"]?.ToString()!, out bool error_email);

	bool formSubmitted = TempData["form_submitted"] != null && (bool)TempData["form_submitted"]!;
}


@*@await Html.PartialAsync("partials/static/contact-component.cshtml")*@
@await Html.GetBlockGridHtmlAsync(Model.Layout)
@*
<container>
	<form onsubmit="handleContactFormSubmit(event)" novalidate>
		<!-- Blocklist-formuläret renderas ut -->
		@Html.GetBlockListHtml(Model.ContactForm);
	</form>
</container>

*@
<section class="contact-form">

	<div class="container">
	
	<div class="headline">
		<h4>@formTitle</h4>
		<h2>@formHeadline</h2>
		<p>@preamble</p>
	</div>


		@using (Html.BeginUmbracoForm("HandleContactFormSubmit", "ContactSurface", FormMethod.Post))
		{
			<div class="form-input-group">
				<label for="name" class="form-label"></label>
				<input id="name" name="name" type="text" placeholder="Enter your name" class="form-input" required="@isRequired" value="@ViewData["name"]" />
@* 				<span class="form-input-error @((error_name) ? "form-invalid-input": null)">Måste lägga in namn</span> *@


				<span class="form-input-error @(error_name ? "form-invalid-input" : "")">
					@if (error_name)
					{
						<span class="form-invalid-input">@errorMessage</span>
					}
				</span>

			</div>

			<div class="form-input-group">
				<label for="phone" class="form-label"></label>
				<input id="phone" name="phone" type="text" placeholder="Enter your number" class="form-input" required="@isRequired" value="@ViewData["phone"]" />
@* 				<span class="form-input-error @((error_phone) ? "form-invalid-input": null)">Måste lägga in namn</span> *@

				<span class="form-input-error @(error_phone ? "form-invalid-input" : "")">
					@if (error_phone)
					{
						<span class="form-invalid-input">@errorMessage</span>
					}
				</span>
			</div>

			<div class="form-input-group">
				<label for="email" class="form-label"></label>
				<input id="email" name="email" type="email" placeholder="Enter your email" class="form-input" required="@isRequired" value="@ViewData["email"]" />
@* 				<span class="form-input-error @((error_email) ? "form-invalid-input": null)">Måste lägga in namn</span> *@

				<span class="form-input-error @(error_email ? "form-invalid-input" : "")">
					@if (error_email)
					{
						<span class="form-invalid-input">@errorMessage</span>
					}
				</span>
			</div>

			<div class="form-input-group">
				<label for="" class="form-label"></label>
				<input id="list" name="list" type="text" placeholder="Financial consulting" class="form-input" />
			</div>
			<button type="submit" class="form-button btn btn-primary">Submit</button>
		}

		@if(TempData["success"] == null)
		{
			<div class="sussess-message">@TempData["success"]</div>

		}


</div>

</section>

@await Html.PartialAsync("partials/static/partnersItem.cshtml");

@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters;

@{
    @*Hämtar ut sectionTitle och skapar ett ID*@
    var sectionTitle = Model?.Content.Value<string>("sectionTitle") ?? "";
    var sectionId = sectionTitle?.ToString().ToLower().Trim().Replace(" ", "-");
    @*Ifsats. Är värdet sant, ska klassen spacing-top användas, annars lämnas tom.*@
    var spacingTopClass = (Model!.Content.Value<bool>("addSpaceToTop")) ? "spacing-top" : "";
    var spacingBottomClass = (Model.Content.Value<bool>("addSpaceToBottom")) ? "spacing-bottom" : "";
    var centerContentClass =  (Model.Content.Value<bool>("centerContentOnPage")) ? "center" : "";

    var sectionBackgroundColorLabel = Model.Content.Value<ColorPickerValueConverter.PickedColor>("sectionBackgroundColor")?.Label.ToLower() ?? null;
    var backgroundColorClass = (!string.IsNullOrEmpty(sectionBackgroundColorLabel) && sectionBackgroundColorLabel != "none") ? $"bg-{sectionBackgroundColorLabel}" : "";
    
    var sectionBackgroundImage = Model?.Content.Value<IPublishedContent>("sectionBackgroundImage")?.Url() ?? null;
}


@*style="background-image: url(@sectionBackgroundImage)"*@
<section id="@sectionId" class="@spacingTopClass @spacingBottomClass @backgroundColorClass" style="background-image: url(@sectionBackgroundImage)">

    
    @if (!string.IsNullOrEmpty(backgroundColorClass)) 
    {
        <div class="background @backgroundColorClass"></div>
    }
    
    <div class="@centerContentClass">
        @await Html.GetBlockGridItemAreasHtmlAsync(Model!)
    </div>
</section>
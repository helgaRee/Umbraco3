@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockListItem>;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;

@{
    var uniqueName = Model.Content.Value<string>("uniqueName") ?? "";
    var inputType = Model.Content.Value<IEnumerable<string>>("inputType");
    var label = Model.Content.Value<string>("labelText") ?? "";
    var hideLabel = Model.Content.Value<bool>("hideLabel");
    var placeholder = Model.Content.Value("placeholderText") ?? "";
    var list = Model.Content.Value<IEnumerable<string>>("inputType");
        
    var isRequired = Model.Content.Value<bool>("isRequired");
    var errorMessage = Model.Content.Value<string>("errorMessage");


    bool.TryParse(ViewData["error_name"]?.ToString()!, out bool error_name);
    bool formSubmitted = TempData["form_submitted"] != null && (bool)TempData["form_submitted"]!;

}

<div id="_@uniqueName" class="form-input-group">
    @if(!hideLabel) {
        <label for="@uniqueName">@label</label>
    } else {
        <label for="@uniqueName"></label>

    }
    <input type="@inputType" id="@uniqueName" name="@uniqueName" placeholder="@placeholder" required="@isRequired" value="@ViewData["name"]">

    <span class="form-input-error @(error_name ? "form-invalid-input" : "")">
        @if (error_name)
        {
            <span class="form-invalid-input">@errorMessage</span>
        }
    </span>
   
@*      <span class="form-input-error @((error_name) ? "form-invalid-input": null)">Måste lägga in namn</span> *@


@*@(isRequired?)

        @if(string.IsNullOrEmpty(ViewData["name"]?.ToString())) {
            <span class="form-invalid-input">@errorMessage</span>
        }
*@

</div>

